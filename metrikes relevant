import os
from collections import defaultdict
import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
import csv
relevant_documents_path = r"C:\Users\chryssa_pat\PycharmProjects\pythonProject\Relevant_20"

# Read relevant documents from file
relevant_documents_dict = {}
with open(relevant_documents_path, 'r') as rel_file:
    for query_id, line in enumerate(rel_file):
        rel_docs = [int(doc) for doc in line.strip().split()]
        relevant_documents_dict[query_id] = rel_docs
relevant_documents = pd.DataFrame(list(relevant_documents_dict.items()), columns=['query_id', 'rel_docs'])

# Display the resulting DataFrame
print(relevant_documents)


# Convert all elements in the 'Sorted_Doc_IDs' column to integers

precision_list = []
recall_list = []

# Assuming sorted_queries_all_docs_df['Sorted_Doc_IDs'] contains lists of document IDs
# Replace it with the actual column name in your DataFrame
for i, doc_ids in enumerate(relevant_documents['rel_docs']):
    retrieved_count = 0
    precision_list_query = []  # List to store precision for each document ID
    recall_list_query = []  # List to store recall for each document ID
    top_k = len(doc_ids)  # Set top_k dynamically based on the number of items in the line

    for doc_id in doc_ids:

        retrieved_count += 1

        precision = retrieved_count / doc_id
        recall = retrieved_count / top_k

        precision_list_query.append(precision)
        print(precision_list_query)
        recall_list_query.append(recall)
        print(recall_list_query)

    # Plot the precision-recall diagram for each query
    plt.plot(recall_list_query, precision_list_query, label=f'Document ID in Query {i+1}')
    plt.xlabel('Recall')
    plt.ylabel('Precision')
    plt.title(f'Top-{top_k} Precision-Recall Diagram for Query {i+1}')
    plt.show()

