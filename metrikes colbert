import os
from collections import defaultdict
import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
import csv

# Replace these paths with your actual file paths
colbert_path = r"C:\Users\chryssa_pat\PycharmProjects\pythonProject\colbert_result.csv"

# Read the ColBERT results into a DataFrame
colbert = pd.read_csv(colbert_path)

# Initialize a list to store precision and recall values for each query
precision_recall_list = []
# Dictionary to store lists of DocumentIDs for each query
query_document_ids = defaultdict(list)

# Create an empty list to store data for DataFrame
data = []

# Read your CSV file
with open(colbert_path, newline='') as csvfile:
    reader = csv.DictReader(csvfile)

    # Iterate over each row
    for row in reader:
        # Extract query and DocumentIDs
        query = row['Query']
        document_ids = eval(row['DocumentIDs'])  # Convert string representation to list

        # Save DocumentIDs in the corresponding list for the query
        query_document_ids[query].extend(document_ids)

        # Append data to the list
        data.append({'Query': query, 'DocumentIDs': document_ids})

query_document_df = pd.DataFrame(data)

# Display the DataFrame
print(query_document_df)
top_k = 5
query_document_df['DocumentIDs'] = query_document_df['DocumentIDs'].apply(lambda x: x[:top_k])

# Now, 'Top_K_Doc_IDs' contains the top k elements for each row
print(query_document_df)
# Convert all elements in the 'Sorted_Doc_IDs' column to integers
query_document_df['DocumentIDs'] = query_document_df['DocumentIDs'].apply(lambda x: sorted([int(doc_id) for doc_id in x]))

precision_list = []
recall_list = []

# Assuming sorted_queries_all_docs_df['Sorted_Doc_IDs'] contains lists of document IDs
# Replace it with the actual column name in your DataFrame
for i, doc_ids in enumerate(query_document_df['DocumentIDs']):
    retrieved_count = 0
    precision_list_query = []  # List to store precision for each document ID
    recall_list_query = []  # List to store recall for each document ID

    for doc_id in doc_ids:

        retrieved_count += 1

        precision = retrieved_count / doc_id
        recall = retrieved_count / top_k

        precision_list_query.append(precision)
        print(precision_list_query)
        recall_list_query.append(recall)
        print(recall_list_query)

    # Plot the precision-recall diagram for each query
    plt.plot(recall_list_query, precision_list_query, label=f'Document ID in Query {i+1}')
    plt.xlabel('Recall')
    plt.ylabel('Precision')
    plt.title(f'Top-{top_k} Precision-Recall Diagram for Query {i+1}')
    plt.show()

